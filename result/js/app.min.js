/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nwindow.onload = function() {\r\n        let price = { //Объект, в который записывается количество билетов и направление движения\r\n            route: 'formAtoB',\r\n            count: '1', //По умолчанию имеет указанные значения, при изменении направления объект также будет изменяться\r\n        }\r\n        const routeSelect = document.querySelector('.select__route'),\r\n            timesCollection = document.querySelectorAll('.select__time-choice'),\r\n            printCurrentTime = () => { //Функция для вывода корректного времени\r\n                const currentTimeZoneOffsetInHours = new Date().getTimezoneOffset() / 60;\r\n                for (let i = 0; i < timesCollection.length; i++) {\r\n                    /*При загрузке страницы через цикл в нужные контейнеры добавляются\r\n                     элементы select с учетом часового пояса пользователя*/\r\n                    if (timesCollection[i].classList.contains('fromAtoB')) {\r\n                        timesCollection[i].innerHTML = `\r\n                        <div class=\"select__wrapper\">\r\n                            <label for=\"fromAtoB\">Выберите время</label>\r\n                            <select name=\"fromAtoB\" class='select' id=\"fromAtoB\">\r\n                                <option selected value=\"${18+currentTimeZoneOffsetInHours+':00'}\">${18+currentTimeZoneOffsetInHours+':00'}(из A в B)</option>\r\n                                <option value=\"${18+currentTimeZoneOffsetInHours+':30'}\">${18+currentTimeZoneOffsetInHours+':30'}(из A в B)</option>\r\n                                <option value=\"${18+currentTimeZoneOffsetInHours+':45'}\">${18+currentTimeZoneOffsetInHours+':45'}(из A в B)</option>\r\n                                <option value=\"${19+currentTimeZoneOffsetInHours+':00'}\">${19+currentTimeZoneOffsetInHours+':00'}(из A в B)</option>\r\n                                <option value=\"${19+currentTimeZoneOffsetInHours+':15'}\">${19+currentTimeZoneOffsetInHours+':15'}(из A в B)</option>\r\n                                <option value=\"${21+currentTimeZoneOffsetInHours+':00'}\">${21+currentTimeZoneOffsetInHours+':00'}(из A в B)</option>\r\n                            </select>\r\n                        </div>`;\r\n                    }\r\n                    if (timesCollection[i].classList.contains('fromBtoA')) {\r\n                        timesCollection[i].innerHTML = `\r\n                        <div class=\"select__wrapper\">\r\n                            <label for=\"fromBtoA\">Выберите время</label>\r\n                            <select name=\"fromBtoA\" class='select' id=\"fromBtoA\">\r\n                                <option selected value=\"${18+currentTimeZoneOffsetInHours+':30'}\">${18+currentTimeZoneOffsetInHours+':30'}(из B в A)</option>\r\n                                <option value=\"${18+currentTimeZoneOffsetInHours+':45'}\">${18+currentTimeZoneOffsetInHours+':45'}(из B в A)</option>\r\n                                <option value=\"${19+currentTimeZoneOffsetInHours+':00'}\">${19+currentTimeZoneOffsetInHours+':00'}(из B в A)</option>\r\n                                <option value=\"${19+currentTimeZoneOffsetInHours+':15'}\">${19+currentTimeZoneOffsetInHours+':15'}(из B в A)</option>\r\n                                <option value=\"${19+currentTimeZoneOffsetInHours+':35'}\">${19+currentTimeZoneOffsetInHours+':35'}(из B в A)</option>\r\n                                <option value=\"${21+currentTimeZoneOffsetInHours+':50'}\">${21+currentTimeZoneOffsetInHours+':50'}(из B в A)</option>\r\n                                <option value=\"${21+currentTimeZoneOffsetInHours+':55'}\">${21+currentTimeZoneOffsetInHours+':55'}(из B в A)</option>\r\n                            </select>\r\n                        </div>`;\r\n                    }\r\n                    if (timesCollection[i].classList.contains('fromAtoBandBack')) {\r\n                        timesCollection[i].innerHTML = `\r\n                    <div class=\"select__wrapper\">\r\n                        <label for=\"fromAtoBandBack\">Выберите время отплытия</label>\r\n                        <select name=\"fromAtoBandBack\" class=\"select\" id=\"fromAtoBandBack\">\r\n                            <option selected value=\"${18+currentTimeZoneOffsetInHours+':00'}\">${18+currentTimeZoneOffsetInHours+':00'}(из A в B)</option>\r\n                            <option value=\"${18+currentTimeZoneOffsetInHours+':30'}\">${18+currentTimeZoneOffsetInHours+':30'}(из A в B)</option>\r\n                            <option value=\"${18+currentTimeZoneOffsetInHours+':45'}\">${18+currentTimeZoneOffsetInHours+':45'}(из A в B)</option>\r\n                            <option value=\"${19+currentTimeZoneOffsetInHours+':00'}\">${19+currentTimeZoneOffsetInHours+':00'}(из A в B)</option>\r\n                            <option value=\"${19+currentTimeZoneOffsetInHours+':15'}\">${19+currentTimeZoneOffsetInHours+':15'}(из A в B)</option>\r\n                            <option value=\"${21+currentTimeZoneOffsetInHours+':00'}\">${21+currentTimeZoneOffsetInHours+':00'}(из A в B)</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"select__wrapper\">\r\n                        <label for=\"fromBtoAandBack\">Выберите время обратного рейса</label>\r\n                        <select name=\"fromBtoAandBack\" class=\"select\" id=\"fromBtoAandBack\">\r\n                            <option disabled value=\"${18+currentTimeZoneOffsetInHours+':30'}\">${18+currentTimeZoneOffsetInHours+':30'}(из B в A)</option>\r\n                            <option disabled value=\"${18+currentTimeZoneOffsetInHours+':45'}\">${18+currentTimeZoneOffsetInHours+':45'}(из B в A)</option>\r\n                            <option selected value=\"${19+currentTimeZoneOffsetInHours+':00'}\">${19+currentTimeZoneOffsetInHours+':00'}(из B в A)</option>\r\n                            <option value=\"${19+currentTimeZoneOffsetInHours+':15'}\">${19+currentTimeZoneOffsetInHours+':15'}(из B в A)</option>\r\n                            <option value=\"${19+currentTimeZoneOffsetInHours+':35'}\">${19+currentTimeZoneOffsetInHours+':35'}(из B в A)</option>\r\n                            <option value=\"${21+currentTimeZoneOffsetInHours+':50'}\">${21+currentTimeZoneOffsetInHours+':50'}(из B в A)</option>\r\n                            <option value=\"${21+currentTimeZoneOffsetInHours+':55'}\">${21+currentTimeZoneOffsetInHours+':55'}(из B в A)</option>\r\n                        </select>\r\n                    </div>\r\n                    `;\r\n                    }\r\n                }\r\n            };\r\n        printCurrentTime();\r\n\r\n        function setCurrentBackTime() { //Функция для корректировки времени маршрута из В в А, с учетом выбранного времени из A в B и времени в пути\r\n            const fromAtoBandBackSelect = document.querySelector('#fromAtoBandBack'),\r\n                fromBtoAandBackSelect = document.querySelector('#fromBtoAandBack');\r\n            fromAtoBandBackSelect.addEventListener('change', (e) => {\r\n                let isSelected = false; // Булевая переменная для назначения дефолтного значения второго селекта\r\n                for (let i = 0; i < fromBtoAandBackSelect.children.length; i++) {\r\n                    fromBtoAandBackSelect.children[i].removeAttribute('selected');\r\n                    fromBtoAandBackSelect.children[i].removeAttribute('disabled'); // Убираем со всех старых неподходящих options атрибут disabled\r\n                    if ((getMinuteValue(fromAtoBandBackSelect.value) <= getMinuteValue(fromBtoAandBackSelect.children[i].value)) && (getMinuteValue(fromBtoAandBackSelect.children[i].value) < (Number(getMinuteValue(fromAtoBandBackSelect.value)) + Number(50)))) {\r\n                        // С помощью преобразования сравниваем значение времени старта + 50 минут с временем обратного рейса\r\n                        // Если время обратного рейса выпадает на время в пути, то к нему добавляется атрибут disabled и его выбрать нельзя\r\n                        fromBtoAandBackSelect.children[i].setAttribute(\"disabled\", \"disabled\");\r\n                    } else { //Если время не совпадает с временем в пути, то этот options назначается дефолтным  \r\n                        if (isSelected == false) {\r\n                            fromBtoAandBackSelect.children[i].setAttribute('selected', 'selected');\r\n                            isSelected = true; //Это действие необходимо выполнить только 1 раз, поэтому меняем значение isSelected\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                function getMinuteValue(value) { //Для корректного сравнения двух значений, необходимо формат HH:MM привести к формату MM\r\n                    let timeArray = value.split(':') //Преобразование HH:MM в массив вида ['HH', 'MM'];\r\n                    return Number(timeArray[0]) * 60 + Number(timeArray[1]); //На всякий случай оба значения конвертируем в числовой тип данных\r\n                }\r\n            })\r\n        };\r\n        setCurrentBackTime();\r\n        routeSelect.addEventListener('change', (e) => {\r\n            for (let i = 0; i < timesCollection.length; i++) {\r\n                timesCollection[i].style.display = 'none';\r\n                if (timesCollection[i].classList.contains(routeSelect.value)) {\r\n                    timesCollection[i].style.display = 'flex';\r\n                }\r\n            }\r\n            price.route = routeSelect.value;\r\n        });\r\n        const getCountBtn = document.querySelector('.getCount'),\r\n            resultBlock = document.querySelector('.resultPrice'),\r\n            countOfTicketInput = document.querySelector('.countTickets');\r\n        countOfTicketInput.addEventListener('change', (e) => {\r\n            price.count = e.target.value;\r\n        })\r\n        getCountBtn.addEventListener('click', (e) => {\r\n                    if (price.route == 'fromAtoBandBack') {\r\n                        resultBlock.innerHTML = `\r\n                        <p class='main-text'>Вы выбрали следующее количество билетов: ${price.count},\r\n                        для поездки по направлению ${routeSelect.options[routeSelect.selectedIndex].textContent}<br>\r\n                        Время отплытия: ${document.querySelector(`#fromAtoBandBack`).value}<br>\r\n                        Время обратного рейса: ${document.querySelector(`#fromBtoAandBack`).value}<br>\r\n                        Общее время в пути: 100 минут.<br>\r\n                        Стоимость одного билета: 1200 рублей<br>\r\n                        Общая стоимость: ${price.count*1200}\r\n                        </p>`;\r\n                    }\r\n                   else{\r\n                    resultBlock.innerHTML = `\r\n                    <p class='main-text'>Вы выбрали следующее количество билетов: ${price.count},\r\n                     для поездки по направлению ${routeSelect.options[routeSelect.selectedIndex].textContent}<br>\r\n                    Время отплытия: ${document.querySelector(`#${routeSelect.value}`).value}<br>\r\n                    Время в пути: 50 минут.<br>\r\n                    Стоимость одного билета: 700 рублей<br>\r\n                    Общая стоимость: ${price.count*700}\r\n                    </p>\r\n                    `;\r\n                   } \r\n    })\r\n}\r\n\r\nconst showMoreButton = document.querySelector('.show-more');\r\nshowMoreButton.addEventListener('click', () =>{\r\n    \r\n    showMoreButton.parentNode.insertAdjacentHTML('beforeend', `\r\n    <div class=\"cart__times-item\">12:00</div>\r\n    <div class=\"cart__times-item\">12:00</div>\r\n    <div class=\"cart__times-item\">12:00</div>\r\n    `);\r\n    showMoreButton.parentNode.removeChild(showMoreButton);\r\n});\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;